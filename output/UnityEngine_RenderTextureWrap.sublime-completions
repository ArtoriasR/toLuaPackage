{
	"scope": "source.lua -variable.other.lua",

	"completions":
	[
		{"trigger":"UnityEngine.RenderTexture","contents":"UnityEngine.RenderTexture"},
		{"trigger":"RenderTexture.FindObjectOfType","contents":"${1:} UnityEngine.Object.FindObjectOfType()"},
		{"trigger":"RenderTexture.FindObjectOfType\t(Type:type)","contents":"${1:Object} UnityEngine.Object.FindObjectOfType(${2:Type:type})"},
		{"trigger":"RenderTexture.FindObjectsOfType","contents":"${1:T[]} UnityEngine.Object.FindObjectsOfType()"},
		{"trigger":"RenderTexture.Instantiate\t(T:original)","contents":"${1:} UnityEngine.Object.Instantiate(${2:T:original})"},
		{"trigger":"RenderTexture.Instantiate\t(Object:original)","contents":"${1:Object} UnityEngine.Object.Instantiate(${2:Object:original})"},
		{"trigger":"RenderTexture.Instantiate\t(Object:original,Vector3:position,Quaternion:rotation)","contents":"${1:Object} UnityEngine.Object.Instantiate(${2:Object:original},${3:Vector3:position},${4:Quaternion:rotation})"},
		{"trigger":"RenderTexture:GetInstanceID","contents":"${1:Int32} ${2:UnityEngine.Object}:GetInstanceID()"},
		{"trigger":"RenderTexture:GetHashCode","contents":"${1:Int32} ${2:UnityEngine.Object}:GetHashCode()"},
		{"trigger":"RenderTexture:Equals\t(Object:o)","contents":"${1:Boolean} ${2:UnityEngine.Object}:Equals(${3:Object:o})"},
		{"trigger":"RenderTexture:ToString","contents":"${1:System.String} ${2:UnityEngine.Object}:ToString()"},
		{"trigger":"RenderTexture.DestroyObject\t(Object:obj)","contents":"UnityEngine.Object.DestroyObject(${1:Object:obj})"},
		{"trigger":"RenderTexture.DestroyObject\t(Object:obj,Single:t)","contents":"UnityEngine.Object.DestroyObject(${1:Object:obj},${2:Single:t})"},
		{"trigger":"RenderTexture.hideFlags\t(R&W_HideFlags)","contents":"${1:RenderTexture}.hideFlags"},
		{"trigger":"RenderTexture.DontDestroyOnLoad\t(Object:target)","contents":"UnityEngine.Object.DontDestroyOnLoad(${1:Object:target})"},
		{"trigger":"RenderTexture.name\t(R&W_System.String)","contents":"${1:RenderTexture}.name"},
		{"trigger":"RenderTexture.FindObjectsOfType\t(Type:type)","contents":"${1:Object[]} UnityEngine.Object.FindObjectsOfType(${2:Type:type})"},
		{"trigger":"RenderTexture.DestroyImmediate\t(Object:obj)","contents":"UnityEngine.Object.DestroyImmediate(${1:Object:obj})"},
		{"trigger":"RenderTexture.DestroyImmediate\t(Object:obj,Boolean:allowDestroyingAssets)","contents":"UnityEngine.Object.DestroyImmediate(${1:Object:obj},${2:Boolean:allowDestroyingAssets})"},
		{"trigger":"RenderTexture.Destroy\t(Object:obj)","contents":"UnityEngine.Object.Destroy(${1:Object:obj})"},
		{"trigger":"RenderTexture.Destroy\t(Object:obj,Single:t)","contents":"UnityEngine.Object.Destroy(${1:Object:obj},${2:Single:t})"},
		{"trigger":"RenderTexture:GetNativeTexturePtr","contents":"${1:IntPtr} ${2:UnityEngine.Texture}:GetNativeTexturePtr()"},
		{"trigger":"RenderTexture.texelSize	(R_Vector2)","contents":"${1:RenderTexture}.texelSize"},
		{"trigger":"RenderTexture.mipMapBias\t(R&W_Single)","contents":"${1:RenderTexture}.mipMapBias"},
		{"trigger":"RenderTexture.wrapMode\t(R&W_TextureWrapMode)","contents":"${1:RenderTexture}.wrapMode"},
		{"trigger":"RenderTexture.anisoLevel\t(R&W_Int32)","contents":"${1:RenderTexture}.anisoLevel"},
		{"trigger":"RenderTexture.filterMode\t(R&W_FilterMode)","contents":"${1:RenderTexture}.filterMode"},
		{"trigger":"RenderTexture.height\t(R&W_Int32)","contents":"${1:RenderTexture}.height"},
		{"trigger":"RenderTexture.width\t(R&W_Int32)","contents":"${1:RenderTexture}.width"},
		{"trigger":"RenderTexture.SetGlobalAnisotropicFilteringLimits\t(Int32:forcedMin,Int32:globalMax)","contents":"UnityEngine.Texture.SetGlobalAnisotropicFilteringLimits(${1:Int32:forcedMin},${2:Int32:globalMax})"},
		{"trigger":"RenderTexture.anisotropicFiltering\t(R&W_AnisotropicFiltering)","contents":"RenderTexture.anisotropicFiltering"},
		{"trigger":"RenderTexture.masterTextureLimit\t(R&W_Int32)","contents":"RenderTexture.masterTextureLimit"},
		{"trigger":"RenderTexture.SupportsStencil\t(RenderTexture:rt)","contents":"${1:Boolean} UnityEngine.RenderTexture.SupportsStencil(${2:RenderTexture:rt})"},
		{"trigger":"RenderTexture:GetTexelOffset","contents":"${1:Vector2} ${2:UnityEngine.RenderTexture}:GetTexelOffset()"},
		{"trigger":"RenderTexture.enabled\t(R&W_Boolean)","contents":"RenderTexture.enabled"},
		{"trigger":"RenderTexture.active\t(R&W_RenderTexture)","contents":"RenderTexture.active"},
		{"trigger":"RenderTexture:SetGlobalShaderProperty\t(String:propertyName)","contents":"${1:UnityEngine.RenderTexture}:SetGlobalShaderProperty(${2:String:propertyName})"},
		{"trigger":"RenderTexture.depthBuffer	(R_RenderBuffer)","contents":"${1:RenderTexture}.depthBuffer"},
		{"trigger":"RenderTexture.colorBuffer	(R_RenderBuffer)","contents":"${1:RenderTexture}.colorBuffer"},
		{"trigger":"RenderTexture:MarkRestoreExpected","contents":"${1:UnityEngine.RenderTexture}:MarkRestoreExpected()"},
		{"trigger":"RenderTexture:DiscardContents\t(Boolean:discardColor,Boolean:discardDepth)","contents":"${1:UnityEngine.RenderTexture}:DiscardContents(${2:Boolean:discardColor},${3:Boolean:discardDepth})"},
		{"trigger":"RenderTexture:DiscardContents","contents":"${1:UnityEngine.RenderTexture}:DiscardContents()"},
		{"trigger":"RenderTexture:IsCreated","contents":"${1:Boolean} ${2:UnityEngine.RenderTexture}:IsCreated()"},
		{"trigger":"RenderTexture:Release","contents":"${1:UnityEngine.RenderTexture}:Release()"},
		{"trigger":"RenderTexture:Create","contents":"${1:Boolean} ${2:UnityEngine.RenderTexture}:Create()"},
		{"trigger":"RenderTexture.enableRandomWrite\t(R&W_Boolean)","contents":"${1:RenderTexture}.enableRandomWrite"},
		{"trigger":"RenderTexture.antiAliasing\t(R&W_Int32)","contents":"${1:RenderTexture}.antiAliasing"},
		{"trigger":"RenderTexture.volumeDepth\t(R&W_Int32)","contents":"${1:RenderTexture}.volumeDepth"},
		{"trigger":"RenderTexture.isVolume\t(R&W_Boolean)","contents":"${1:RenderTexture}.isVolume"},
		{"trigger":"RenderTexture.isCubemap\t(R&W_Boolean)","contents":"${1:RenderTexture}.isCubemap"},
		{"trigger":"RenderTexture.generateMips\t(R&W_Boolean)","contents":"${1:RenderTexture}.generateMips"},
		{"trigger":"RenderTexture.useMipMap\t(R&W_Boolean)","contents":"${1:RenderTexture}.useMipMap"},
		{"trigger":"RenderTexture.format\t(R&W_RenderTextureFormat)","contents":"${1:RenderTexture}.format"},
		{"trigger":"RenderTexture.sRGB	(R_Boolean)","contents":"${1:RenderTexture}.sRGB"},
		{"trigger":"RenderTexture.isPowerOfTwo\t(R&W_Boolean)","contents":"${1:RenderTexture}.isPowerOfTwo"},
		{"trigger":"RenderTexture.depth\t(R&W_Int32)","contents":"${1:RenderTexture}.depth"},
		{"trigger":"RenderTexture.ReleaseTemporary\t(RenderTexture:temp)","contents":"UnityEngine.RenderTexture.ReleaseTemporary(${1:RenderTexture:temp})"},
		{"trigger":"RenderTexture.GetTemporary\t(Int32:width,Int32:height)","contents":"${1:RenderTexture} UnityEngine.RenderTexture.GetTemporary(${2:Int32:width},${3:Int32:height})"},
		{"trigger":"RenderTexture.GetTemporary\t(Int32:width,Int32:height,Int32:depthBuffer)","contents":"${1:RenderTexture} UnityEngine.RenderTexture.GetTemporary(${2:Int32:width},${3:Int32:height},${4:Int32:depthBuffer})"},
		{"trigger":"RenderTexture.GetTemporary\t(Int32:width,Int32:height,Int32:depthBuffer,RenderTextureFormat:format)","contents":"${1:RenderTexture} UnityEngine.RenderTexture.GetTemporary(${2:Int32:width},${3:Int32:height},${4:Int32:depthBuffer},${5:RenderTextureFormat:format})"},
		{"trigger":"RenderTexture.GetTemporary\t(Int32:width,Int32:height,Int32:depthBuffer,RenderTextureFormat:format,RenderTextureReadWrite:readWrite)","contents":"${1:RenderTexture} UnityEngine.RenderTexture.GetTemporary(${2:Int32:width},${3:Int32:height},${4:Int32:depthBuffer},${5:RenderTextureFormat:format},${6:RenderTextureReadWrite:readWrite})"},
		{"trigger":"RenderTexture.GetTemporary\t(Int32:width,Int32:height,Int32:depthBuffer,RenderTextureFormat:format,RenderTextureReadWrite:readWrite,Int32:antiAliasing)","contents":"${1:RenderTexture} UnityEngine.RenderTexture.GetTemporary(${2:Int32:width},${3:Int32:height},${4:Int32:depthBuffer},${5:RenderTextureFormat:format},${6:RenderTextureReadWrite:readWrite},${7:Int32:antiAliasing})"},
	]
}
