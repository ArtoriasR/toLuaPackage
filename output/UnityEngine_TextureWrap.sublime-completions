{
	"scope": "source.lua -variable.other.lua",

	"completions":
	[
		{"trigger":"UnityEngine.Texture","contents":"UnityEngine.Texture"},
		{"trigger":"Texture.FindObjectOfType","contents":"${1 } UnityEngine.Object.FindObjectOfType()"},
		{"trigger":"Texture.FindObjectOfType\t(Type:type)","contents":"${1 Object} UnityEngine.Object.FindObjectOfType(${2 Type:type})"},
		{"trigger":"Texture.FindObjectsOfType","contents":"${1 T[]} UnityEngine.Object.FindObjectsOfType()"},
		{"trigger":"Texture.Instantiate\t(T:original)","contents":"${1 } UnityEngine.Object.Instantiate(${2 T:original})"},
		{"trigger":"Texture.Instantiate\t(Object:original)","contents":"${1 Object} UnityEngine.Object.Instantiate(${2 Object:original})"},
		{"trigger":"Texture.Instantiate\t(Object:original,Vector3:position,Quaternion:rotation)","contents":"${1 Object} UnityEngine.Object.Instantiate(${2 Object:original},${3 Vector3:position},${4 Quaternion:rotation})"},
		{"trigger":"Texture:GetInstanceID","contents":"${1 Int32} ${2 UnityEngine.Object}:GetInstanceID()"},
		{"trigger":"Texture:GetHashCode","contents":"${1 Int32} ${2 UnityEngine.Object}:GetHashCode()"},
		{"trigger":"Texture:Equals\t(Object:o)","contents":"${1 Boolean} ${2 UnityEngine.Object}:Equals(${3 Object:o})"},
		{"trigger":"Texture:ToString","contents":"${1 System.String} ${2 UnityEngine.Object}:ToString()"},
		{"trigger":"Texture.DestroyObject\t(Object:obj)","contents":"UnityEngine.Object.DestroyObject(${1 Object:obj})"},
		{"trigger":"Texture.DestroyObject\t(Object:obj,Single:t)","contents":"UnityEngine.Object.DestroyObject(${1 Object:obj},${2 Single:t})"},
		{"trigger":"Texture.hideFlags\t(R&W_HideFlags)","contents":"${1 Texture}.hideFlags"},
		{"trigger":"Texture.DontDestroyOnLoad\t(Object:target)","contents":"UnityEngine.Object.DontDestroyOnLoad(${1 Object:target})"},
		{"trigger":"Texture.name\t(R&W_System.String)","contents":"${1 Texture}.name"},
		{"trigger":"Texture.FindObjectsOfType\t(Type:type)","contents":"${1 Object[]} UnityEngine.Object.FindObjectsOfType(${2 Type:type})"},
		{"trigger":"Texture.DestroyImmediate\t(Object:obj)","contents":"UnityEngine.Object.DestroyImmediate(${1 Object:obj})"},
		{"trigger":"Texture.DestroyImmediate\t(Object:obj,Boolean:allowDestroyingAssets)","contents":"UnityEngine.Object.DestroyImmediate(${1 Object:obj},${2 Boolean:allowDestroyingAssets})"},
		{"trigger":"Texture.Destroy\t(Object:obj)","contents":"UnityEngine.Object.Destroy(${1 Object:obj})"},
		{"trigger":"Texture.Destroy\t(Object:obj,Single:t)","contents":"UnityEngine.Object.Destroy(${1 Object:obj},${2 Single:t})"},
		{"trigger":"Texture:GetNativeTexturePtr","contents":"${1 IntPtr} ${2 UnityEngine.Texture}:GetNativeTexturePtr()"},
		{"trigger":"Texture.texelSize	(R_Vector2)","contents":"${1 Texture}.texelSize"},
		{"trigger":"Texture.mipMapBias\t(R&W_Single)","contents":"${1 Texture}.mipMapBias"},
		{"trigger":"Texture.wrapMode\t(R&W_TextureWrapMode)","contents":"${1 Texture}.wrapMode"},
		{"trigger":"Texture.anisoLevel\t(R&W_Int32)","contents":"${1 Texture}.anisoLevel"},
		{"trigger":"Texture.filterMode\t(R&W_FilterMode)","contents":"${1 Texture}.filterMode"},
		{"trigger":"Texture.height\t(R&W_Int32)","contents":"${1 Texture}.height"},
		{"trigger":"Texture.width\t(R&W_Int32)","contents":"${1 Texture}.width"},
		{"trigger":"Texture.SetGlobalAnisotropicFilteringLimits\t(Int32:forcedMin,Int32:globalMax)","contents":"UnityEngine.Texture.SetGlobalAnisotropicFilteringLimits(${1 Int32:forcedMin},${2 Int32:globalMax})"},
		{"trigger":"Texture.anisotropicFiltering\t(R&W_AnisotropicFiltering)","contents":"Texture.anisotropicFiltering"},
		{"trigger":"Texture.masterTextureLimit\t(R&W_Int32)","contents":"Texture.masterTextureLimit"},
	]
}
