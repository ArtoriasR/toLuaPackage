{
	"scope": "source.lua -variable.other.lua",

	"completions":
	[
		{"trigger":"MeshCollider","contents":"MeshCollider"},
		{"trigger":"MeshCollider.FindObjectOfType\t(Type)","contents":"${1:1_Object} UnityEngine.Object.FindObjectOfType(${2:2_Type})"},
		{"trigger":"MeshCollider.FindObjectsOfType\t(Type)","contents":"${1:1_Object[]} UnityEngine.Object.FindObjectsOfType(${2:2_Type})"},
		{"trigger":"MeshCollider.Instantiate\t(Object,Vector3,Quaternion)","contents":"${1:1_Object} UnityEngine.Object.Instantiate(${2:2_Object},${3:3_Vector3},${4:4_Quaternion})"},
		{"trigger":"MeshCollider:GetInstanceID","contents":"${1:1_Int32} ${2:2_UnityEngine.Object}:GetInstanceID()"},
		{"trigger":"MeshCollider:GetHashCode","contents":"${1:1_Int32} ${2:2_UnityEngine.Object}:GetHashCode()"},
		{"trigger":"MeshCollider:Equals\t(Object)","contents":"${1:1_Boolean} ${2:2_UnityEngine.Object}:Equals(${3:3_Object})"},
		{"trigger":"MeshCollider:ToString","contents":"${1:1_System.String} ${2:2_UnityEngine.Object}:ToString()"},
		{"trigger":"MeshCollider.DestroyObject\t(Object,Single)","contents":"UnityEngine.Object.DestroyObject(${1:1_Object},${2:2_Single})"},
		{"trigger":"MeshCollider.hideFlags\t(R&W_HideFlags)","contents":"${1:1_MeshCollider}.hideFlags"},
		{"trigger":"MeshCollider.DontDestroyOnLoad\t(Object)","contents":"UnityEngine.Object.DontDestroyOnLoad(${1:1_Object})"},
		{"trigger":"MeshCollider.name\t(R&W_System.String)","contents":"${1:1_MeshCollider}.name"},
		{"trigger":"MeshCollider.DestroyImmediate\t(Object,Boolean)","contents":"UnityEngine.Object.DestroyImmediate(${1:1_Object},${2:2_Boolean})"},
		{"trigger":"MeshCollider.Destroy\t(Object,Single)","contents":"UnityEngine.Object.Destroy(${1:1_Object},${2:2_Single})"},
		{"trigger":"MeshCollider.particleSystem	(R_Component)","contents":"${1:1_MeshCollider}.particleSystem"},
		{"trigger":"MeshCollider.particleEmitter	(R_Component)","contents":"${1:1_MeshCollider}.particleEmitter"},
		{"trigger":"MeshCollider.hingeJoint	(R_Component)","contents":"${1:1_MeshCollider}.hingeJoint"},
		{"trigger":"MeshCollider.collider2D	(R_Component)","contents":"${1:1_MeshCollider}.collider2D"},
		{"trigger":"MeshCollider.collider	(R_Component)","contents":"${1:1_MeshCollider}.collider"},
		{"trigger":"MeshCollider.guiTexture	(R_Component)","contents":"${1:1_MeshCollider}.guiTexture"},
		{"trigger":"MeshCollider.guiElement	(R_Component)","contents":"${1:1_MeshCollider}.guiElement"},
		{"trigger":"MeshCollider.networkView	(R_Component)","contents":"${1:1_MeshCollider}.networkView"},
		{"trigger":"MeshCollider.guiText	(R_Component)","contents":"${1:1_MeshCollider}.guiText"},
		{"trigger":"MeshCollider.audio	(R_Component)","contents":"${1:1_MeshCollider}.audio"},
		{"trigger":"MeshCollider.renderer	(R_Component)","contents":"${1:1_MeshCollider}.renderer"},
		{"trigger":"MeshCollider.constantForce	(R_Component)","contents":"${1:1_MeshCollider}.constantForce"},
		{"trigger":"MeshCollider.animation	(R_Component)","contents":"${1:1_MeshCollider}.animation"},
		{"trigger":"MeshCollider.light	(R_Component)","contents":"${1:1_MeshCollider}.light"},
		{"trigger":"MeshCollider.camera	(R_Component)","contents":"${1:1_MeshCollider}.camera"},
		{"trigger":"MeshCollider.rigidbody2D	(R_Component)","contents":"${1:1_MeshCollider}.rigidbody2D"},
		{"trigger":"MeshCollider.rigidbody	(R_Component)","contents":"${1:1_MeshCollider}.rigidbody"},
		{"trigger":"MeshCollider:BroadcastMessage\t(String,Object,SendMessageOptions)","contents":"${1:1_UnityEngine.Component}:BroadcastMessage(${2:2_String},${3:3_Object},${4:4_SendMessageOptions})"},
		{"trigger":"MeshCollider:SendMessage\t(String,Object,SendMessageOptions)","contents":"${1:1_UnityEngine.Component}:SendMessage(${2:2_String},${3:3_Object},${4:4_SendMessageOptions})"},
		{"trigger":"MeshCollider:SendMessageUpwards\t(String,Object,SendMessageOptions)","contents":"${1:1_UnityEngine.Component}:SendMessageUpwards(${2:2_String},${3:3_Object},${4:4_SendMessageOptions})"},
		{"trigger":"MeshCollider:CompareTag\t(String)","contents":"${1:1_Boolean} ${2:2_UnityEngine.Component}:CompareTag(${3:3_String})"},
		{"trigger":"MeshCollider:GetComponents\t(Type)","contents":"${1:1_Component[]} ${2:2_UnityEngine.Component}:GetComponents(${3:3_Type})"},
		{"trigger":"MeshCollider.tag\t(R&W_System.String)","contents":"${1:1_MeshCollider}.tag"},
		{"trigger":"MeshCollider:GetComponentsInParent\t(Type)","contents":"${1:1_Component[]} ${2:2_UnityEngine.Component}:GetComponentsInParent(${3:3_Type})"},
		{"trigger":"MeshCollider:GetComponentInParent\t(Type)","contents":"${1:1_Component} ${2:2_UnityEngine.Component}:GetComponentInParent(${3:3_Type})"},
		{"trigger":"MeshCollider:GetComponentsInChildren\t(Type)","contents":"${1:1_Component[]} ${2:2_UnityEngine.Component}:GetComponentsInChildren(${3:3_Type})"},
		{"trigger":"MeshCollider:GetComponentInChildren\t(Type,Boolean)","contents":"${1:1_Component} ${2:2_UnityEngine.Component}:GetComponentInChildren(${3:3_Type},${4:4_Boolean})"},
		{"trigger":"MeshCollider:GetComponent\t(Type)","contents":"${1:1_Component} ${2:2_UnityEngine.Component}:GetComponent(${3:3_Type})"},
		{"trigger":"MeshCollider.gameObject	(R_GameObject)","contents":"${1:1_MeshCollider}.gameObject"},
		{"trigger":"MeshCollider.transform	(R_Transform)","contents":"${1:1_MeshCollider}.transform"},
		{"trigger":"MeshCollider:Raycast\t(Ray,RaycastHit&,Single)","contents":"${1:1_Boolean} ${2:2_UnityEngine.Collider}:Raycast(${3:3_Ray},${4:4_RaycastHit&},${5:5_Single})"},
		{"trigger":"MeshCollider.bounds	(R_Bounds)","contents":"${1:1_MeshCollider}.bounds"},
		{"trigger":"MeshCollider.sharedMaterial\t(R&W_PhysicMaterial)","contents":"${1:1_MeshCollider}.sharedMaterial"},
		{"trigger":"MeshCollider:ClosestPointOnBounds\t(Vector3)","contents":"${1:1_Vector3} ${2:2_UnityEngine.Collider}:ClosestPointOnBounds(${3:3_Vector3})"},
		{"trigger":"MeshCollider.material\t(R&W_PhysicMaterial)","contents":"${1:1_MeshCollider}.material"},
		{"trigger":"MeshCollider.contactOffset\t(R&W_Single)","contents":"${1:1_MeshCollider}.contactOffset"},
		{"trigger":"MeshCollider.isTrigger\t(R&W_Boolean)","contents":"${1:1_MeshCollider}.isTrigger"},
		{"trigger":"MeshCollider.attachedRigidbody	(R_Rigidbody)","contents":"${1:1_MeshCollider}.attachedRigidbody"},
		{"trigger":"MeshCollider.enabled\t(R&W_Boolean)","contents":"${1:1_MeshCollider}.enabled"},
		{"trigger":"MeshCollider.smoothSphereCollisions\t(R&W_Boolean)","contents":"${1:1_MeshCollider}.smoothSphereCollisions"},
		{"trigger":"MeshCollider.convex\t(R&W_Boolean)","contents":"${1:1_MeshCollider}.convex"},
		{"trigger":"MeshCollider.sharedMesh\t(R&W_Mesh)","contents":"${1:1_MeshCollider}.sharedMesh"},
	]
}
